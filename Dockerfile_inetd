#
# Minimal inetd container for Gopher routing
#
# See: Dockerfile before starting.
#
# sudo docker build -f Dockerfile_inetd -t inetd:latest .
# docker run -d --name inetd \
#   --hostname inetd \
#   --network gopher_net \
#   -p 7777:7777 \
#   inetd:latest
#
# Test with:
# echo "/~/user1" | nc 172.19.0.3 7777
#
# Make the container hostname resolvable:
#
# CONTAINER="inetd"
# IP=$(sudo docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$CONTAINER")
# sudo sed -i "/[[:space:]]$CONTAINER$/d" /etc/hosts && \
# echo "$IP $CONTAINER" | sudo tee -a /etc/hosts
#
# You will also want to point inetd on the host to the inetd container! Here's an example:

    #!/bin/bash

    # Read the selector from stdin
    read selector

    # Function to process and replace paths and ports in the response
    process_response() {
        local prefix="$1"
        local port="$2"
        local target_host="gopher.someodd.zip"
        local target_port="70"

        # Strip the prefix from the selector and ensure the leading slash is retained
        local stripped_selector="${selector#$prefix}"
        if [[ "$stripped_selector" != /* ]]; then
            stripped_selector="/$stripped_selector"
        fi

        # Send the selector to the appropriate service and process the response
        echo "$stripped_selector" | nc localhost $port | \
        sed -e "/\t${target_host}\t${port}/s|\t/|\t${prefix}/|g" \
            -e "s|\(${target_host}\)\t${port}|\1\t${target_port}|g"
    }

    # Handle the selector
    case "$selector" in
        "/phorum"*)
            process_response "/phorum" 7070
            ;;
        "/~/"*)
            echo "$selector" | nc "inetd" 7777
            ;;
        *)
            process_response "/" 7071
            ;;
    esac

#
# sudo systemctl restart inetd
FROM alpine:latest

# Install bash (for [[ ]] tests), inetd, and netcat
RUN apk add --no-cache bash busybox-extras netcat-openbsd

# Copy your gopherrouter script into the container
COPY gopherrouter.sh /usr/local/bin/gopherrouter.sh
RUN chmod +x /usr/local/bin/gopherrouter.sh

# Create the inetd config to call gopherrouter.sh on port 7777 (TCP)
RUN echo "7777 stream tcp nowait root /usr/local/bin/gopherrouter.sh gopherrouter.sh" > /etc/inetd.conf

# Expose Gopher port
EXPOSE 7777

# Run inetd in the foreground with our config
CMD ["/usr/sbin/inetd", "-f", "/etc/inetd.conf"]